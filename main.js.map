{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/weather-app-api/src/app/app.controller.ts","webpack:///./apps/weather-app-api/src/app/app.module.ts","webpack:///./apps/weather-app-api/src/app/app.service.ts","webpack:///./apps/weather-app-api/src/main.ts","webpack:///./libs/data/src/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"mongodb\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get, Post, Body } from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { ICity } from '@pract/data';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n\n\n  @Get('cities')\n  async getData() {\n    let data = await this.appService.getData()\n    console.log(data, \"data\")\n    return this.appService.getData();\n  }\n\n  @Post('addCity')\n  addData(@Body() city:ICity) {\n    return this.appService.addData(city);\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  // imports: [MongooseModule.forRoot('mongodb+srv://vlad:1GDbEr94cgXpWpFs@cluster0-64hz2.mongodb.net/nestjs-weather?retryWrites=true&w=majority')],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\nimport { IWeather, ICity } from '@pract/data'\n// import {mongodb} from 'mongodb'\n\n@Injectable()\nexport class AppService {\n\n  mongodb\n  MongoClient\n  mongoUrl = 'mongodb+srv://vlad:3Pm2rkCHIT0T2e9k@cluster0-64hz2.mongodb.net/todos?retryWrites=true&w=majority';\n\n  cities: ICity[] = []\n\n  constructor() {\n    this.mongodb = require('mongodb');\n    this.MongoClient = this.mongodb.MongoClient;\n\n    let mongo;\n    this.MongoClient\n      .connect(this.mongoUrl, { useNewUrlParser: true })\n      .then(function(client) {\n        mongo = client.db();\n        mongo\n            .collection('todos')\n            .find().toArray()\n            .then(function(todos) {\n            });\n        \n      });\n\n  \n  }\n\n  \n\n  // async getData() {\n  //   let gotCities \n  //   let mongo;\n  //   await this.MongoClient\n  //     .connect(this.mongoUrl, { useNewUrlParser: true })\n  //     .then(function(client) {\n  //       mongo = client.db();\n  //       mongo\n  //           .collection('todos')\n  //           .find().toArray()\n  //           .then(function(todos) {\n  //               gotCities = todos\n  //               console.log(gotCities)\n                \n                \n  //           });\n            \n  //     });\n      \n\n  //     return gotCities\n\n  // }\n\n  async getData() {\n    const client = await this.MongoClient.connect(this.mongoUrl, { useNewUrlParser: true });\n    const db = client.db();\n    const cities = await db.collection('todos').find().toArray();\n    return cities;\n  }\n\n  addData(city) {\n    let mongo;\n    this.MongoClient\n      .connect(this.mongoUrl, { useNewUrlParser: true })\n      .then(function(client) {\n        mongo = client.db();\n        mongo\n          .collection('todos')\n          .insertOne({ \n            city: city.city,\n            coordLat: city.coords.lat,\n            coordLog: city.coords.lon,\n            flag: city.flag\n          })\n          .then(function() {\n            // Виконується після створення\n          });\n          console.log(city)\n        \n      });\n\n  }\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.port || 3333;\n  await app.listen(port, () => {\n    console.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","export * from './lib/data';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"mongodb\");","module.exports = require(\"tslib\");"],"sourceRoot":""}